name: build

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:

jobs:
  goreleaser:
    strategy:
      matrix:
        go-version: [ ~1.16 ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: matrix.os == 'ubuntu-latest'
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: matrix.os == 'ubuntu-latest'
      -
        name: Setup
        run: make setup
      -
        name: Test
        run: make test
      -
        name: Diff
        run: git diff
      -
        name: Upload coverage
        uses: codecov/codecov-action@v1
        if: matrix.os == 'ubuntu-latest'
        with:
          file: ./coverage.txt
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v1
        with:
          username: caarlos0
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      -
        name: Clear
        if: matrix.os == 'ubuntu-latest'
        run: |
          rm -f ${HOME}/.docker/config.json
